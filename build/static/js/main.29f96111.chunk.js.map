{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","className","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","main","name","sys","country","Date","toDateString","Math","round","temp","temp_max","temp_min","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAEMA,EACC,mCADDA,EAEK,2CAoDIC,MAjDf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,KAiBb,OACE,qBAAKC,UAAU,MAAf,SACE,iCACE,6CAEA,qBAAKA,UAAU,aAAf,SACE,uBAAOC,KAAK,OAAOD,UAAU,aAAaE,YAAY,eAAeC,SAAU,SAAAC,GAAC,OAAIP,EAASO,EAAEC,OAAOC,QAAQA,MAAOV,EAAOW,WAnBrH,SAAAC,GACG,UAAZA,EAAIC,KACNC,MAAM,GAAD,OAAIjB,EAAJ,qBAA4BG,EAA5B,iCAA0DH,IAC5DkB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJf,EAAWe,GACXjB,EAAS,IAETkB,QAAQC,IAAIF,WAcW,oBAAhBhB,EAAQmB,KACjB,sBAAKjB,UAAU,kBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UAA2BF,EAAQoB,KAAnC,KAA2CpB,EAAQqB,IAAIC,WACvD,qBAAKpB,UAAU,OAAf,UAAuB,IAAIqB,MAAOC,oBAGpC,sBAAKtB,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UAAuBuB,KAAKC,MAAM1B,EAAQmB,KAAKQ,MAA/C,WACA,sBAAKzB,UAAU,eAAf,UACE,sBAAKA,UAAU,YAAf,gBAA+BuB,KAAKC,MAAM1B,EAAQmB,KAAKS,UAAvD,UACA,sBAAK1B,UAAU,WAAf,gBAA8BuB,KAAKC,MAAM1B,EAAQmB,KAAKU,UAAtD,aAEF,qBAAK3B,UAAU,UAAf,SAA0BF,EAAQA,QAAQ,GAAGmB,aAG5C,SCrCEW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.29f96111.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst api = {\n  key: \"3403c007b2eb0fd7304c49452459757f\",\n  baseURL: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.baseURL}weather?q=${query}&units=imperial&appid=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          setQuery('');\n\n          console.log(result);\n        })\n    }\n  }\n\n  return (\n    <div className=\"app\">\n      <main>\n        <h1>Weather App</h1>\n\n        <div className=\"search-box\">\n          <input type=\"text\" className=\"search-bar\" placeholder=\"Enter a City\" onChange={e => setQuery(e.target.value)} value={query} onKeyPress={search}/>\n        </div>\n\n        {(typeof weather.main != \"undefined\") ? (\n        <div className=\"current-weather\">\n          <div className=\"location-box\">\n            <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n            <div className=\"date\">{new Date().toDateString()}</div>\n          </div>\n\n          <div className=\"weather-box\">\n            <div className=\"temp\">{Math.round(weather.main.temp)}°F</div>\n            <div className=\"high-low-box\">\n              <div className=\"temp-high\">H: {Math.round(weather.main.temp_max)}°</div>\n              <div className=\"temp-low\">L: {Math.round(weather.main.temp_min)}°</div>\n            </div>\n            <div className=\"weather\">{weather.weather[0].main}</div>\n          </div>\n        </div>\n        ) : ('')}\n\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}